--- a/com/mojang/blaze3d/preprocessor/GlslPreprocessor.java
+++ b/com/mojang/blaze3d/preprocessor/GlslPreprocessor.java
@@ -7,14 +_,17 @@
 import java.util.regex.Matcher;
 import java.util.regex.Pattern;
 import javax.annotation.Nullable;
+
+import com.mojang.blaze3d.shaders.CompiledShader;
 import net.minecraft.FileUtil;
 import net.minecraft.client.renderer.ShaderDefines;
 import net.minecraft.util.StringUtil;
 import net.neoforged.api.distmarker.Dist;
 import net.neoforged.api.distmarker.OnlyIn;
+import net.neoforged.neoforge.client.renderer.INeoForgeGlslPreprocessor;
 
 @OnlyIn(Dist.CLIENT)
-public abstract class GlslPreprocessor {
+public abstract class GlslPreprocessor implements INeoForgeGlslPreprocessor {
     private static final String C_COMMENT = "/\\*(?:[^*]|\\*+[^*/])*\\*+/";
     private static final String LINE_COMMENT = "//[^\\v]*";
     private static final Pattern REGEX_MOJ_IMPORT = Pattern.compile(
@@ -25,6 +_,24 @@
     );
     private static final Pattern REGEX_ENDS_WITH_WHITESPACE = Pattern.compile("(?:^|\\v)(?:\\s|/\\*(?:[^*]|\\*+[^*/])*\\*+/|(//[^\\v]*))*\\z");
 
+    private final Pattern importPattern;
+    private final String importPatternPrefix;
+
+    public GlslPreprocessor() {
+        this.importPattern = REGEX_MOJ_IMPORT;
+        this.importPatternPrefix = "moj_import";
+    }
+
+    public GlslPreprocessor(String importPatternPrefix) {
+        this.importPattern = Pattern.compile("(#(?:/\\*(?:[^*]|\\*+[^*/])*\\*+/|\\h)*%s(?:/\\*(?:[^*]|\\*+[^*/])*\\*+/|\\h)*(?:\"(.*)\"|<(.*)>))".formatted(importPatternPrefix));
+        this.importPatternPrefix = importPatternPrefix;
+    }
+
+    @Override
+    public List<String> process(String shaderSource, CompiledShader.Type type) {
+        return this.process(shaderSource);
+    }
+
     public List<String> process(String p_166462_) {
         GlslPreprocessor.Context glslpreprocessor$context = new GlslPreprocessor.Context();
         List<String> list = this.processImports(p_166462_, glslpreprocessor$context, "");
@@ -37,7 +_,7 @@
         int j = 0;
         String s = "";
         List<String> list = Lists.newArrayList();
-        Matcher matcher = REGEX_MOJ_IMPORT.matcher(p_166470_);
+        Matcher matcher = importPattern.matcher(p_166470_);
 
         while (matcher.find()) {
             if (!isDirectiveDisabled(p_166470_, matcher, j)) {
@@ -66,7 +_,7 @@
 
                         list.addAll(list1);
                     } else {
-                        String s6 = flag ? String.format(Locale.ROOT, "/*#moj_import \"%s\"*/", s1) : String.format(Locale.ROOT, "/*#moj_import <%s>*/", s1);
+                        String s6 = flag ? String.format(Locale.ROOT, "/*#" + importPatternPrefix + " \"%s\"*/", s1) : String.format(Locale.ROOT, "/*#moj_import <%s>*/", s1);
                         list.add(s + s2 + s6);
                     }
 
