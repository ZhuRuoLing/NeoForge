--- a/com/mojang/blaze3d/vertex/VertexBuffer.java
+++ b/com/mojang/blaze3d/vertex/VertexBuffer.java
@@ -8,9 +_,9 @@
 import java.nio.ByteBuffer;
 import javax.annotation.Nullable;
 import net.minecraft.client.Minecraft;
-import net.minecraft.client.renderer.CompiledShaderProgram;
 import net.neoforged.api.distmarker.Dist;
 import net.neoforged.api.distmarker.OnlyIn;
+import net.neoforged.neoforge.client.renderer.IGraphicsShader;
 import org.joml.Matrix4f;
 
 @OnlyIn(Dist.CLIENT)
@@ -36,6 +_,10 @@
     }
 
     public void upload(MeshData p_350419_) {
+        upload(p_350419_, true);
+    }
+
+    public void upload(MeshData p_350419_, final boolean close) {
         MeshData meshdata = p_350419_;
 
         label40: {
@@ -52,7 +_,7 @@
                 this.indexType = meshdata$drawstate.indexType();
                 this.mode = meshdata$drawstate.mode();
             } catch (Throwable throwable1) {
-                if (p_350419_ != null) {
+                if (p_350419_ != null && close) {
                     try {
                         meshdata.close();
                     } catch (Throwable throwable) {
@@ -63,14 +_,14 @@
                 throw throwable1;
             }
 
-            if (p_350419_ != null) {
+            if (p_350419_ != null && close) {
                 p_350419_.close();
             }
 
             return;
         }
 
-        if (p_350419_ != null) {
+        if (p_350419_ != null && close) {
             p_350419_.close();
         }
     }
@@ -177,7 +_,7 @@
         return rendersystem$autostorageindexbuffer != null ? rendersystem$autostorageindexbuffer.type() : this.indexType;
     }
 
-    public void drawWithShader(Matrix4f p_254480_, Matrix4f p_254555_, @Nullable CompiledShaderProgram p_366620_) {
+    public void drawWithShader(Matrix4f p_254480_, Matrix4f p_254555_, @Nullable IGraphicsShader p_366620_) {
         if (p_366620_ != null) {
             RenderSystem.assertOnRenderThread();
             p_366620_.setDefaultUniforms(this.mode, p_254480_, p_254555_, Minecraft.getInstance().getWindow());
